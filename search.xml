<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何用hexo写文章</title>
      <link href="/2020/02/12/test/"/>
      <url>/2020/02/12/test/</url>
      
        <content type="html"><![CDATA[<p>刚刚搭建好个人主页的我，心情是激动又忐忑的。激动是因为几次失败后终于成功了，有了人生中第一个“自制”博客，忐忑的是这玩意该怎么写啊。。。</p><p>所以稍微的研究了一下，现在想分享给和我一样的人们。（毕竟建博客的初衷就是为了练习写作加想做一些输出）</p><p>文章目标人群：刚刚利用各路教程终于搭建好了Hexo，准备写下第一篇文章的同学们。<br>我的基本情况：Hexo + GitHub Pages搭建的博客，nexT主题，Mac OS。</p><a id="more"></a><p>###现在，让我们开始吧！！</p><p>##Step 0: 基本了解 + 准备工作</p><p>1.我们打开hexo所在目录 -&gt; source -&gt; _posts, 2.可以看到一个hello-world.md文件，这就是hexo自动帮我们生成的第一篇文章。<br>3.回到hexo文件夹，就是里面有_config.yml, source, themes等等的那个。<br>用hexo server来启动本地预览，在浏览器输入<a href="http://localhost:4000/即可。" target="_blank" rel="noopener">http://localhost:4000/即可。</a></p><figure class="highlight plain"><figcaption><span>server```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">##Step 1: 新建文章</span><br><span class="line">在hexo所在目录下，打开terminal，在命令行输入：</span><br><span class="line">&#96;&#96;&#96;hexo new a</span><br></pre></td></tr></table></figure><p>a是文章标题，也可以加上双引号,如“a”。<br>通过这行命令，我们新建出来了一个page，而且是一个post page，page还有其他种，稍后我们会提到。<br>正确的结果：我们会在_posts里看见多了一个a.md文件。<br>因此我们也知道了，默认情况下，hexo为我们创建的是markdown文件。刷新页面（<a href="http://localhost:4000/）我们能看见新添一个名字叫a的文章，没有任何内容。" target="_blank" rel="noopener">http://localhost:4000/）我们能看见新添一个名字叫a的文章，没有任何内容。</a><br>而这个_posts文件夹，算是一个比较特殊的文件夹，因为它装着所有你发布出去的文章。<br>打开a.md文件，我们会看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: 1</span><br><span class="line">date: 2017-09-15 19:00:41</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">在这里随便写点什么</span><br></pre></td></tr></table></figure><p>然后刷新页面,就会看到你写的内容。与此同时，hexo也会自动为这个post生成一个页面，当我们点击标题，就会进入那个页面。<br><img src="/2020/02/12/test/1.webp" alt><br>##Step 2: 草稿箱<br>上一步我们新建出来的，叫做post page。除了post page，我们还可以新建draft page，也就是草稿。很多时候我们需要先写成草稿，而暂时不发布出去。draft page就可以满足我们的要求，我们的网站上是看不到草稿文件的。<br>在terminal输入</p><figure class="highlight plain"><figcaption><span>new draft b```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们会在source下看见一个新的文件夹，_drafts，这个里面会装我们所有的草稿文件。</span><br><span class="line">那写好了的草稿，如何可以在不发布的情况下，预览一下文章在网站上的样子呢？</span><br><span class="line">&#96;&#96;&#96;hexo server --draft</span><br></pre></td></tr></table></figure><p>当然，你要先shut down原来开着那个server，才可以开启新的server。如此一来，我们就可以预览草稿文件啦<br>###Step 3: 发布草稿<br>当你准备好了要发布草稿时:</p><figure class="highlight plain"><figcaption><span>publish b```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">你会发现_drafts里的b.md不见了，跑到了_posts里面,也就说明你的草稿发布成功了。</span><br><span class="line">###Step 4: normal page</span><br><span class="line">我目前还不知道该如何用中文称呼这类页面。我们可以把post和draft统称为blog pages，在这之外的一种就是normal pages， 类似一个网站上的“关于”，“了解我们”之类的页面。</span><br><span class="line">这类page要如何新建呢？</span><br><span class="line">&#96;&#96;&#96;hexo new page c</span><br></pre></td></tr></table></figure><p>和前两种不同，这个命令会在source文件夹内创建出c文件夹，与_posts，_drafts并列。文件夹里面有一个index.md文件。<br>刷新页面，你会发现c并没有出现在页面内，那它在哪儿呢？<br>在网址后面加上c/， 即<a href="http://localhost:4000/c/，就可以看到了。" target="_blank" rel="noopener">http://localhost:4000/c/，就可以看到了。</a><br>正因为c不是一个blog page，所以它也不会出现在blog列表中，而是要通过URL去access。<br>##Step 5: 一个小tip<br>现在我们了解到page一共有三种，post，draft，normal。<br><img src="/2020/02/12/test/2.webp" alt><br>那为什么一开始的时候我们用</p><figure class="highlight plain"><figcaption><span>new a```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">就直接生成了post page呢？</span><br><span class="line">因为默认的设置。</span><br><span class="line">打开熟悉的_config.yml文件，找到</span><br><span class="line">&#96;&#96;&#96;default_layout: post</span><br></pre></td></tr></table></figure><p>这句表示默认的页面会新建成post格式的。<br>所以，如果你习惯先把文章写成草稿，那就把它改成draft就好。<br><code>default_layout: draft</code></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO next中常见问题</title>
      <link href="/2020/02/10/fileName/"/>
      <url>/2020/02/10/fileName/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/02/10/fileName/1.jpg" alt><br>next中常见问题</p><a id="more"></a><h2 id="如何设置「阅读全文」？"><a href="#如何设置「阅读全文」？" class="headerlink" title="如何设置「阅读全文」？"></a>如何设置「阅读全文」？</h2><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法：</p><p>1.在文章中使用 &lt; !– more – &gt; 手动进行截断，Hexo 提供的方式 推荐<br>2.在文章的 front-matter 中添加 description，并提供文章摘录<br>3.自动形成摘要，在 主题配置文件 中添加<br> <figure class="highlight plain"><figcaption><span>auto_excerpt:</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enable: true</span><br><span class="line">length: 150</span><br></pre></td></tr></table></figure><br>    默认截取的长度为 150 字符，可以根据需要自行设定<br>   建议使用 &lt; !– more – &gt;（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。</p><h2 id="Favicon-设置后没有生效？"><a href="#Favicon-设置后没有生效？" class="headerlink" title="Favicon 设置后没有生效？"></a>Favicon 设置后没有生效？</h2><p>将你的 favicon 放置到 站点 的 source 目录下，与站点的配置文件同级。 若你发现设置的 Favicon 并未生效，请先清除浏览器的缓存后直接访问 Favicon 的地址，这个地址通常是<a href="http://your-domain.com/favicon.ico。" target="_blank" rel="noopener">http://your-domain.com/favicon.ico。</a><br>如果你的站点是放在子目录下，请设置为：favicon: favicon.ico</p><h2 id="如何更改字体？"><a href="#如何更改字体？" class="headerlink" title="如何更改字体？"></a>如何更改字体？</h2><p>NexT 从 5.0.1 版本开始提供一个 字体定制特性， 请先查看此特性是否能满足你的需求。以下的修改将覆盖 字体定制 的特性。 编辑主题下的 source/css/_variables/custom.styl 文件，新增两个变量：</p><figure class="highlight plain"><figcaption><span>标题，修改成你期望的字体族</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$font-family-headings &#x3D; Georgia, sans</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 修改成你期望的字体族</span><br><span class="line">$font-family-base &#x3D; &quot;Microsoft YaHei&quot;, Verdana, sans-serif</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 代码字体</span><br><span class="line">$code-font-family &#x3D; &quot;Input Mono&quot;, &quot;PT Mono&quot;, Consolas, Monaco, Menlo, monospace</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 正文字体的大小</span><br><span class="line">$font-size-base &#x3D; 16px</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 代码字体的大小</span><br><span class="line">$code-font-size &#x3D; 13px</span><br></pre></td></tr></table></figure><h2 id="如何更改内容区域的宽度？"><a href="#如何更改内容区域的宽度？" class="headerlink" title="如何更改内容区域的宽度？"></a>如何更改内容区域的宽度？</h2><p>NexT 对于内容的宽度的设定如下：<br>700px，当屏幕宽度 &lt; 1600px<br>900px，当屏幕宽度 &gt;= 1600px<br>移动设备下，宽度自适应<br>如果你需要修改内容的宽度，同样需要编辑样式文件。 编辑主题的 source/css/_variables/custom.styl 文件，新增变量：</p><figure class="highlight plain"><figcaption><span>修改成你期望的宽度</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$content-desktop &#x3D; 700px</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 当视窗超过 1600px 后的宽度</span><br><span class="line">$content-desktop-large &#x3D; 900px</span><br></pre></td></tr></table></figure><p>此方法不适用于 Pisces Scheme，关于如何修改 Pisces Scheme 的宽度请参看 这个 Issue</p><h2 id="为何新增的菜单项显示-Menu-xxx"><a href="#为何新增的菜单项显示-Menu-xxx" class="headerlink" title="为何新增的菜单项显示 Menu.xxx"></a>为何新增的菜单项显示 Menu.xxx</h2><p>NexT 使用了 Hexo 提供的国际化功能，因此在 Menu 部分配置的值并非直接用于界面的展示，而是作为一个名称。 当渲染的时候，NexT 去寻找对应的语言文件，并替换这个键所定义的文本后展示。<br>以 home 为例，在 主题配置文件 中配置为 home: /， 此处的键即是 home，在不同的语言中，这个键所对应的文本都不同：</p><figure class="highlight plain"><figcaption><span>简体中文</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 语言文件 languages&#x2F;zh-Hans.yml</span><br><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line"></span><br><span class="line"># 英文</span><br><span class="line"># 语言文件 languages&#x2F;en.yml</span><br><span class="line">menu:</span><br><span class="line">  home: Home</span><br></pre></td></tr></table></figure><p>  因此，当新增一个项时，必须在 所使用的语言 中添加对应的翻译文本。<br>关于菜单的配置，请参考 菜单的配置</p><h2 id="标签-分类数量统计不准确？"><a href="#标签-分类数量统计不准确？" class="headerlink" title="标签/分类数量统计不准确？"></a>标签/分类数量统计不准确？</h2><p>  因为 Hexo 有缓存的功能，因此有时候你会发现在 标签 和 分类 页面中的数量统计并不准确。 出现这个问题时，可以按照以下步骤重新生成站点的内容：<br>  1删除站点目录下的 db.json 文件<br>  2在站点目录下执行命令 hexo clean<br>  3在站点目录下执行命令，重新生成 hexo generate<br>当执行完以上步骤后，可以在本地启动服务器来验证下是否已经解决问题。</p><h2 id="为何语言显示不正确？"><a href="#为何语言显示不正确？" class="headerlink" title="为何语言显示不正确？"></a>为何语言显示不正确？</h2><p>若没有设定 language 的值或者 language: default，会出现语言选择不正确的情况。 因此为了确保语言正确显示，请明确指定需要使用的语言。 编辑 站点配置文件， 将 language 字段设置成明确的语言代码。 例如，设置语言为简体中文：</p><figure class="highlight plain"><figcaption><span>zh-Hans```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">## 如何关闭新建页面的评论功能？</span><br><span class="line">当集成了评论系统，如 Disqus，所有新建的页面都将自动开启评论。若你不需要评论，请在页面的 Front-matter 里添加 comments 字段，并将值设置为 false。如下所示：</span><br><span class="line">&#96;&#96;&#96;title: All tags</span><br><span class="line">date: 2015-12-16 17:05:24</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="如何设置页面文章的篇数？"><a href="#如何设置页面文章的篇数？" class="headerlink" title="如何设置页面文章的篇数？"></a>如何设置页面文章的篇数？</h2><p>在 Hexo 里可以为首页和归档页面设置不同的文章篇数，但可能需要安装 Hexo 插件。详细步骤如下。<br>1.使用 npm install –save 命令来安装需要的 Hexo 插件。</p><figure class="highlight plain"><figcaption><span>install --save hexo-generator-index</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-archive</span><br><span class="line">npm install --save hexo-generator-tag</span><br></pre></td></tr></table></figure><p>2.等待扩展全部安装完成后，在 站点配置文章 中，设定如下选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  per_page: 5</span><br><span class="line"></span><br><span class="line">archive_generator:</span><br><span class="line">  per_page: 20</span><br><span class="line">  yearly: true</span><br><span class="line">  monthly: true</span><br><span class="line"></span><br><span class="line">tag_generator:</span><br><span class="line">  per_page: 10</span><br></pre></td></tr></table></figure><p>  per_page 即文章的数量。<br>需要注意的是，Hexo 3.2 版本不允许配置文件中存在重复的选项设置。 因此，最好检查下 站点配置文件 中是否有存在上述同名的配置。 如果存在，请将两者配置在一起。</p><h2 id="如何优化-NexT-主题？"><a href="#如何优化-NexT-主题？" class="headerlink" title="如何优化 NexT 主题？"></a>如何优化 NexT 主题？</h2><p>NexT 并未对 HTML、JavaScript 以及 CSS 做压缩处理。如果你比较在意这点，可以在 NexT 的 Issues 列表搜索 <a href="https://github.com/iissnan/hexo-theme-next/issues?utf8=%E2%9C%93&q=+label%3AOptimization" target="_blank" rel="noopener">他人共享的优化方案</a> 。</p><h2 id="Cannot-find-module-XXX"><a href="#Cannot-find-module-XXX" class="headerlink" title="Cannot find module XXX"></a>Cannot find module XXX</h2><p>NexT 提供的标签插件引用了 Hexo 模块中的一些子模块，例如 hexo-util。 NPM 在版本 3 中引入了新的模块安装机制， NexT 将使用这种机制，意味着如果是旧的 NPM 将会碰到这个错误。 因此，如果您碰到 “Cannot find module XXX” 的错误时，请首先使用 npm -v 确认您的 NPM 版本。<br>版本 &gt; 3 依然报错： 请先删除 node_module 目录，然后使用 npm install 重新安装一下模块。<br>版本 &lt; 3： 您可以选择升级您的 NPM； 或者在站点目录下明确指定模块依赖 npm install –save hexo-util。 其中 <code>hexo-util</code> 仅是示例，请替换成错误中提示的模块名称。 </p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> testing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>guestbook</title>
      <link href="/2020/02/10/guestbook/"/>
      <url>/2020/02/10/guestbook/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/09/hello-world/"/>
      <url>/2020/02/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
